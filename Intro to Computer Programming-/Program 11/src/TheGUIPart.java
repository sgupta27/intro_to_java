// Legal Notice// This program was written using the BreezyGUI platform, written by Kenneth A. // Lambert and Martin Osborne.  The BreezyGUI package can be found at:// http://faculty.cs.wwu.edu/martin/Software%20Packages/BreezyGUI/breezyhome.htm// // The program may be use or modified as you wish, as long as you obey all of the// restrictions from the BreezyGUI site and maintain the reference to the author.// There is no actual or implied warranty and the program is to be used at the // user's own risk./*************************************************************************** Class:  <Program or class name nere>Author:  <YOUR NAME HERE>  Date:  <date here><Description of program or class here>Date		Modification****************************************************************************/import java.awt.*;import BreezyGUI.*;public class TheGUIPart extends GBFrame                      //Every BreezyGUI application program                      //extends a class called GBFrame.                      //This class in turn extends the AWT class                      //Frame.{	//Declare window components for labels, integer fields, and 	//command buttons. These components are defined in the imported	//packages and serve various roles in a graphical user interface.	//The labels: these display the text strings that guide the user. 	private Label xLabel; 	private Label yLabel;	//The integer fields: these are used for the input and output of 	//integer values.	private DoubleField xField; 	private DoubleField yField; 	private DoubleField answerField;	//The command buttons: these trigger the buttonClicked method when	//clicked.	private Button addButton;	private Button subtractButton;	private Button multiplyButton;	private Button divideButton;	//The constructor: here each window component is instantiated with    	//an initial value and position in the window. A position is    	//expressed by four integers that indicate a component's row,    	//column, width, and height with reference to an imaginary grid   	//superimposed on the window. The add methods do the actual   	//instantiation. They each return a control of the indicated   	//type.   	TheGUIPart ()   	{  		xLabel = addLabel ("1st Number (x)",1,1,1,1);		yLabel = addLabel ("2nd Number (y)",2,1,1,1);		xField = addDoubleField (0 ,1,2,1,1);		yField = addDoubleField (0  ,2,2,1,1);		answerField = addDoubleField (0 , 3,2,1,1);		addButton = addButton ("  +  ",3,1,1,1);		subtractButton = addButton ("  -  ",4,1,1,1);		multiplyButton = addButton ("  *  ", 5,1,1,1);		divideButton = addButton ("  /  ", 6,1,1,1);			}	//The buttonClicked method is activated every time a command button	//is clicked. The actual button clicked is passed to the method as 	//a parameter. This parameter is tested to determine which button	//was clicked, and the appropriate action is then taken.	public void buttonClicked (Button buttonObj)	{		int fahrenheit, celsius;		//Test the button.		if (buttonObj == addButton) {  			double x = xField.getNumber();			double y = yField.getNumber();						double answer = (x + y);						answerField.setNumber (answer);  		}		else if (buttonObj == subtractButton)		{			double x = xField.getNumber();			double y = yField.getNumber();						double answer = (x - y);						answerField.setNumber (answer);  		}		else if (buttonObj == multiplyButton)		{			double x = xField.getNumber();			double y = yField.getNumber();						double answer = (x * y);						answerField.setNumber (answer);  		}		else if (buttonObj == divideButton)		{			double x = xField.getNumber();			double y = yField.getNumber();						double answer = (x / y);						answerField.setNumber (answer);  		}				else {					}	}}